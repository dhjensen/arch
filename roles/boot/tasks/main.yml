- name: Run pacstrap
  ansible.builtin.command: pacstrap {{ host.dir }} base linux linux-firmware btrfs-progs openssh python wpa_supplicant
  changed_when: true

- name: Generate fstab
  ansible.builtin.shell: genfstab -U {{ host.dir }} >> {{ host.dir }}/etc/fstab
  changed_when: true

- name: Install efi loader
  ansible.builtin.command: arch-chroot {{ host.dir }} bootctl install
  changed_when: true

- name: Copy loader files
  ansible.builtin.copy:
    src: loader
    dest: "{{ host.dir }}{{ item.1.path }}/"
    mode: "0700"
  loop: "{{ host.disk.partitions | subelements('mounts') }}"
  when: item.0.index == 1

- name: Enable systemd boot update
  ansible.builtin.command: arch-chroot {{ host.dir }} systemctl enable systemd-boot-update
  changed_when: true

- name: Enable sshd
  ansible.builtin.command: arch-chroot {{ host.dir }} systemctl enable sshd
  changed_when: true

- name: Set password to root
  ansible.builtin.shell: |
    set -o pipefail
    echo root:'{{ host.user.root.password }}' | chpasswd -e -R {{ host.dir }}
  changed_when: true

- name: Enable ssh root login with password
  ansible.builtin.lineinfile:
    path: "{{ host.dir }}/etc/ssh/sshd_config"
    regexp: ^#PermitRootLogin
    line: PermitRootLogin yes

- name: Copy systemd network profile
  ansible.builtin.template:
    src: systemd-networkd.network.j2
    dest: "{{ host.dir }}/etc/systemd/network/{{ item.name }}.network"
    mode: "0644"
  loop: "{{ host.boot.network | flatten(levels=1) }}"

- name: Copy wpa_supplicant configuration
  ansible.builtin.template:
    src: wpa_supplicant.conf.j2
    dest: "{{ host.dir }}/etc/wpa_supplicant/wpa_supplicant-{{ host.wifi.interface }}.conf"
    mode: "0644"
  when: host.wifi is defined

- name: Enable systemd wpa_supplicant
  ansible.builtin.command: arch-chroot {{ host.dir }} systemctl enable wpa_supplicant@{{ host.wifi.interface }}
  changed_when: true
  when: host.wifi is defined

- name: Enable systemd network
  ansible.builtin.command: arch-chroot {{ host.dir }} systemctl enable systemd-networkd
  changed_when: true

- name: Enable systemd resolved
  ansible.builtin.command: arch-chroot {{ host.dir }} systemctl enable systemd-resolved
  changed_when: true

  notify:
    - reboot
    - wait for restart
